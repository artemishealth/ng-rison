{"version":3,"file":"ng-rison.umd.js","sources":["../src/lib/utils.ts","../src/lib/rison-parser.ts","../src/lib/rison-stringifier.ts","../src/lib/rison.service.ts","../src/lib/ng-rison.module.ts"],"sourcesContent":["const NOT_ID_CHAR = ' \\'!:(),*@$'\nconst NOT_ID_START = '-0123456789'\nconst ID_REGULAR_EXPRESSION = '[^' + NOT_ID_START + NOT_ID_CHAR + '][^' + NOT_ID_CHAR + ']*'\n\nexport const UTILS = {\n  ID_OK: new RegExp('^' + ID_REGULAR_EXPRESSION + '$'),\n  NEXT_ID: new RegExp(ID_REGULAR_EXPRESSION, 'g'),\n  LEADING_OR_TRAILING_ZERO: (value: string) => {\n    return value.substring(0, 1) === '0' || value.substring(value.length - 1) === '0'\n  },\n}\n","import { UTILS } from './utils'\n\nexport class RisonParser {\n  constructor(private errorHandler: Function) {\n    // copy table['-'] to each of table[i] | i <- '0'..'9':\n    for (let i = 0; i <= 9; i++) {\n      this.table[String(i)] = this.table['-']\n    }\n  }\n  private readonly whitespace = ''\n  private risonString: string\n  private index = 0\n  private message = ''\n\n  private table = {\n    '!': () => {\n      const s = this.risonString\n      const c = s.charAt(this.index++)\n      if (!c) {\n        return this.error('\"!\" at end of input')\n      }\n      const x = this.bangs[c]\n      if (typeof x === 'function') {\n        return x.call(null, this)\n      } else if (typeof x === 'undefined') {\n        return this.error('unknown literal: \"!' + c + '\"')\n      }\n      return x\n    },\n    '(': () => {\n      const o = {}\n      let c\n      let count = 0\n      while ((c = this.next()) !== ')') {\n        if (count) {\n          if (c !== ',') {\n            this.error('missing \\',\\'')\n          }\n        } else if (c === ',') {\n          return this.error('extra \\',\\'')\n        } else {\n          --this.index\n        }\n        const k = this.readValue()\n        if (typeof k === 'undefined') {\n          return undefined\n        }\n        if (this.next() !== ':') {\n          return this.error('missing \\':\\'')\n        }\n        const v = this.readValue()\n        if (typeof v === 'undefined') {\n          return undefined\n        }\n        o[k] = v\n        count++\n      }\n      return o\n    },\n    '\\'': () => {\n      const s = this.risonString\n      let i = this.index\n      let start = i\n      // tslint:disable-next-line: no-any\n      const segments: any[] = []\n      let c\n      while ((c = s.charAt(i++)) !== '\\'') {\n        // if (i == s.length) return this.error('unmatched \"\\'\"');\n        if (!c) {\n          return this.error('unmatched \"\\'\"')\n        }\n        if (c === '!') {\n          if (start < i - 1) {\n            segments.push(s.slice(start, i - 1))\n          }\n          c = s.charAt(i++)\n          if ('!\\''.indexOf(c) >= 0) {\n            segments.push(c)\n          } else {\n            return this.error('invalid string escape: \"!' + c + '\"')\n          }\n          start = i\n        }\n      }\n      if (start < i - 1) {\n        segments.push(s.slice(start, i - 1))\n      }\n      this.index = i\n      return segments.length === 1 ? segments[0] : segments.join('')\n    },\n    // Also any digit.  The statement that follows this table\n    // definition fills in the digits.\n    '-': () => {\n      let s = this.risonString\n      let i = this.index\n      const start = i - 1\n      let state = 'int'\n      let permittedSigns = '-'\n      const transitions = {\n        'int+.': 'frac',\n        'int+e': 'exp',\n        'frac+e': 'exp',\n      }\n      do {\n        const c = s.charAt(i++)\n        if (!c) {\n          break\n        }\n        if ('0' <= c && c <= '9') {\n          continue\n        }\n        if (permittedSigns.indexOf(c) >= 0) {\n          permittedSigns = ''\n          continue\n        }\n        state = transitions[state + '+' + c.toLowerCase()]\n        if (state === 'exp') {\n          permittedSigns = '-'\n        }\n      } while (state)\n      this.index = --i\n      s = s.slice(start, i)\n      if (s === '-') {\n        return this.error('invalid number')\n      }\n      if (UTILS.LEADING_OR_TRAILING_ZERO(s)) {\n        return s\n      } else {\n        return Number(s)\n      }\n    },\n  }\n\n  private bangs = {\n    t: true,\n    f: false,\n    n: null,\n    '(': this.parseArray,\n  }\n\n  public parse(risonString: string) {\n    this.risonString = risonString\n    let value = this.readValue()\n    if (!this.message && this.next()) {\n      value = this.error('unable to parse string as rison: \\'' + risonString + '\\'')\n    }\n    if (this.message && this.errorHandler) {\n      this.errorHandler(this.message, this.index)\n    }\n    return value\n  }\n\n  private readValue() {\n    const character = this.next()\n    const parseFn = character && this.table[character]\n\n    if (parseFn) {\n      return parseFn.apply(this)\n    }\n\n    // fell through table, parse as an id\n\n    const s = this.risonString\n    const i = this.index - 1\n\n    // Regexp.lastIndex may not work right in IE before 5.5?\n    // g flag on the regexp is also necessary\n    UTILS.NEXT_ID.lastIndex = i\n    const m = UTILS.NEXT_ID.exec(s)\n\n    // console.log('matched id', i, r.lastIndex);\n\n    if (m && m.length > 0) {\n      const id = m[0]\n      this.index = i + id.length\n      return id // a string\n    }\n\n    if (character) {\n      return this.error('invalid character: \\'' + character + '\\'')\n    }\n    return this.error('empty expression')\n  }\n\n  private next() {\n    let character: string\n    let ind = this.index\n    do {\n      if (this.index === this.risonString.length) {\n        return undefined\n      }\n      character = this.risonString.charAt(ind++)\n    } while (this.whitespace.indexOf(character) >= 0)\n    this.index = ind\n    return character\n  }\n\n  private error(message: string) {\n    console.error('Rison parser error: ', message)\n    this.message = message\n    return undefined\n  }\n\n  private parseArray(parser: RisonParser) {\n    // tslint:disable-next-line: no-any\n    const ar: any[] = []\n    let c\n    while ((c = parser.next()) !== ')') {\n      if (!c) {\n        return parser.error('unmatched \\'!(\\'')\n      }\n      if (ar.length) {\n        if (c !== ',') {\n          parser.error('missing \\',\\'')\n        }\n      } else if (c === ',') {\n        return parser.error('extra \\',\\'')\n      } else {\n        --parser.index\n      }\n      const n = parser.readValue()\n      if (typeof n === 'undefined') {\n        return undefined\n      }\n      ar.push(n)\n    }\n    return ar\n  }\n}\n","import { UTILS } from './utils'\n\nexport class RisonStringifier {\n  // url-ok but quoted in strings\n  private sq = { '\\'': true, '!': true }\n\n  private stringMap = {\n    array: (arr: any[]) => {\n      const stringParts = arr.map(rawValue => {\n        const fn = this.stringMap[typeof rawValue]\n        if (fn) {\n          return fn(rawValue)\n        }\n      })\n      return `!(${stringParts.join(',')})`\n    },\n    boolean: (bool: boolean) => (bool ? '!t' : '!f'),\n    null: (n: null) => '!n',\n    number: (num: number) => {\n      if (!isFinite(num)) {\n        return '!n'\n      }\n      // strip '+' out of exponent, '-' is ok though\n      return String(num).replace(/\\+/, '')\n    },\n    object: (obj: any) => {\n      if (obj) {\n        if (obj instanceof Array) {\n          return this.stringMap.array(obj)\n        }\n\n        if (typeof obj.__prototype__ === 'object' && typeof obj.__prototype__.encode_rison !== 'undefined') {\n          return obj.encode_rison()\n        }\n\n        const keys = Object.keys(obj)\n        keys.sort()\n        const stringParts = keys.map(key => {\n          const rawValue = obj[key]\n          const fn = this.stringMap[typeof rawValue]\n          return `${this.stringMap.string(key)}:${fn(rawValue)}`\n        })\n        return `(${stringParts.join(',')})`\n      }\n      return '!n'\n    },\n    string: (str: string) => {\n      if (str === '') {\n        return `''`\n      }\n\n      if (!isNaN((str as unknown) as number) && UTILS.LEADING_OR_TRAILING_ZERO(str)) {\n        return str\n      }\n\n      if (UTILS.ID_OK.test(str)) {\n        return str\n      }\n\n      const formattedString = str.replace(/(['!])/g, (a, b) => {\n        if (this.sq[b]) {\n          return '!' + b\n        }\n        return b\n      })\n\n      return `'${formattedString}'`\n    },\n    undefined: x => {\n      throw new Error('rison can\\'t encode the undefined value')\n    },\n  }\n\n  public stringify(obj: any): string {\n    return this.stringMap[typeof obj](obj)\n  }\n}\n","import { Injectable } from '@angular/core'\nimport { RisonParser } from './rison-parser'\nimport { RisonStringifier } from './rison-stringifier'\n\n@Injectable()\nexport class RisonService {\n  /**\n   * This method Rison-encodes a javascript structure.\n   */\n  public stringify(obj: any): string {\n    return new RisonStringifier().stringify(obj)\n  }\n\n  /**\n   * This method parses a rison string into a javascript object or primitive\n   */\n  public parse(url: string): any {\n    const errorCb = (e: Error) => {\n      throw Error('rison decoder error: ' + e)\n    }\n    const parser = new RisonParser(errorCb)\n    return parser.parse(url)\n  }\n}\n","import { NgModule } from '@angular/core'\nimport { RisonService } from './rison.service'\n\n@NgModule({\n  providers: [RisonService],\n})\nexport class NgRisonModule {}\n"],"names":["Injectable","NgModule"],"mappings":";;;;;;;;;;;QAAM,WAAW,GAAG,aAAa;;QAC3B,YAAY,GAAG,aAAa;;QAC5B,qBAAqB,GAAG,IAAI,GAAG,YAAY,GAAG,WAAW,GAAG,KAAK,GAAG,WAAW,GAAG,IAAI;;;;;IAKhE,UAAC,KAAa;QACtC,OAAO,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG,CAAA;IACnF,CAAC;;QALU,KAAK,GAAG;QACnB,KAAK,EAAE,IAAI,MAAM,CAAC,GAAG,GAAG,qBAAqB,GAAG,GAAG,CAAC;QACpD,OAAO,EAAE,IAAI,MAAM,CAAC,qBAAqB,EAAE,GAAG,CAAC;QAC/C,wBAAwB,MAEvB;;;;;;;;QCND,qBAAoB,YAAsB;YAA1C,iBAKC;YALmB,iBAAY,GAAZ,YAAY,CAAU;YAMzB,eAAU,GAAG,EAAE,CAAA;YAExB,UAAK,GAAG,CAAC,CAAA;YACT,YAAO,GAAG,EAAE,CAAA;YAEZ,UAAK,GAAG;gBACd,GAAG;;;gBAAE;;wBACG,CAAC,GAAG,KAAI,CAAC,WAAW;;wBACpB,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,KAAI,CAAC,KAAK,EAAE,CAAC;oBAChC,IAAI,CAAC,CAAC,EAAE;wBACN,OAAO,KAAI,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAAA;qBACzC;;wBACK,CAAC,GAAG,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC;oBACvB,IAAI,OAAO,CAAC,KAAK,UAAU,EAAE;wBAC3B,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,KAAI,CAAC,CAAA;qBAC1B;yBAAM,IAAI,OAAO,CAAC,KAAK,WAAW,EAAE;wBACnC,OAAO,KAAI,CAAC,KAAK,CAAC,qBAAqB,GAAG,CAAC,GAAG,GAAG,CAAC,CAAA;qBACnD;oBACD,OAAO,CAAC,CAAA;iBACT,CAAA;gBACD,GAAG;;;gBAAE;;wBACG,CAAC,GAAG,EAAE;;wBACR,CAAC;;wBACD,KAAK,GAAG,CAAC;oBACb,OAAO,CAAC,CAAC,GAAG,KAAI,CAAC,IAAI,EAAE,MAAM,GAAG,EAAE;wBAChC,IAAI,KAAK,EAAE;4BACT,IAAI,CAAC,KAAK,GAAG,EAAE;gCACb,KAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAA;6BAC5B;yBACF;6BAAM,IAAI,CAAC,KAAK,GAAG,EAAE;4BACpB,OAAO,KAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAA;yBACjC;6BAAM;4BACL,EAAE,KAAI,CAAC,KAAK,CAAA;yBACb;;4BACK,CAAC,GAAG,KAAI,CAAC,SAAS,EAAE;wBAC1B,IAAI,OAAO,CAAC,KAAK,WAAW,EAAE;4BAC5B,OAAO,SAAS,CAAA;yBACjB;wBACD,IAAI,KAAI,CAAC,IAAI,EAAE,KAAK,GAAG,EAAE;4BACvB,OAAO,KAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAA;yBACnC;;4BACK,CAAC,GAAG,KAAI,CAAC,SAAS,EAAE;wBAC1B,IAAI,OAAO,CAAC,KAAK,WAAW,EAAE;4BAC5B,OAAO,SAAS,CAAA;yBACjB;wBACD,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;wBACR,KAAK,EAAE,CAAA;qBACR;oBACD,OAAO,CAAC,CAAA;iBACT,CAAA;gBACD,IAAI;;;gBAAE;;wBACE,CAAC,GAAG,KAAI,CAAC,WAAW;;wBACtB,CAAC,GAAG,KAAI,CAAC,KAAK;;wBACd,KAAK,GAAG,CAAC;;;;;wBAEP,QAAQ,GAAU,EAAE;;wBACtB,CAAC;oBACL,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,MAAM,IAAI,EAAE;;wBAEnC,IAAI,CAAC,CAAC,EAAE;4BACN,OAAO,KAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAA;yBACpC;wBACD,IAAI,CAAC,KAAK,GAAG,EAAE;4BACb,IAAI,KAAK,GAAG,CAAC,GAAG,CAAC,EAAE;gCACjB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;6BACrC;4BACD,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAA;4BACjB,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE;gCACzB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;6BACjB;iCAAM;gCACL,OAAO,KAAI,CAAC,KAAK,CAAC,2BAA2B,GAAG,CAAC,GAAG,GAAG,CAAC,CAAA;6BACzD;4BACD,KAAK,GAAG,CAAC,CAAA;yBACV;qBACF;oBACD,IAAI,KAAK,GAAG,CAAC,GAAG,CAAC,EAAE;wBACjB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;qBACrC;oBACD,KAAI,CAAC,KAAK,GAAG,CAAC,CAAA;oBACd,OAAO,QAAQ,CAAC,MAAM,KAAK,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;iBAC/D,CAAA;;;gBAGD,GAAG;;;gBAAE;;wBACC,CAAC,GAAG,KAAI,CAAC,WAAW;;wBACpB,CAAC,GAAG,KAAI,CAAC,KAAK;;wBACZ,KAAK,GAAG,CAAC,GAAG,CAAC;;wBACf,KAAK,GAAG,KAAK;;wBACb,cAAc,GAAG,GAAG;;wBAClB,WAAW,GAAG;wBAClB,OAAO,EAAE,MAAM;wBACf,OAAO,EAAE,KAAK;wBACd,QAAQ,EAAE,KAAK;qBAChB;oBACD,GAAG;;4BACK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC;wBACvB,IAAI,CAAC,CAAC,EAAE;4BACN,MAAK;yBACN;wBACD,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE;4BACxB,SAAQ;yBACT;wBACD,IAAI,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE;4BAClC,cAAc,GAAG,EAAE,CAAA;4BACnB,SAAQ;yBACT;wBACD,KAAK,GAAG,WAAW,CAAC,KAAK,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC,CAAA;wBAClD,IAAI,KAAK,KAAK,KAAK,EAAE;4BACnB,cAAc,GAAG,GAAG,CAAA;yBACrB;qBACF,QAAQ,KAAK,EAAC;oBACf,KAAI,CAAC,KAAK,GAAG,EAAE,CAAC,CAAA;oBAChB,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC,CAAA;oBACrB,IAAI,CAAC,KAAK,GAAG,EAAE;wBACb,OAAO,KAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAA;qBACpC;oBACD,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC,CAAC,EAAE;wBACrC,OAAO,CAAC,CAAA;qBACT;yBAAM;wBACL,OAAO,MAAM,CAAC,CAAC,CAAC,CAAA;qBACjB;iBACF,CAAA;aACF,CAAA;YAEO,UAAK,GAAG;gBACd,CAAC,EAAE,IAAI;gBACP,CAAC,EAAE,KAAK;gBACR,CAAC,EAAE,IAAI;gBACP,GAAG,EAAE,IAAI,CAAC,UAAU;aACrB,CAAA;;YArIC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;gBAC3B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;aACxC;SACF;;;;;QAoIM,2BAAK;;;;QAAZ,UAAa,WAAmB;YAC9B,IAAI,CAAC,WAAW,GAAG,WAAW,CAAA;;gBAC1B,KAAK,GAAG,IAAI,CAAC,SAAS,EAAE;YAC5B,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,IAAI,EAAE,EAAE;gBAChC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,qCAAqC,GAAG,WAAW,GAAG,IAAI,CAAC,CAAA;aAC/E;YACD,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,YAAY,EAAE;gBACrC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAA;aAC5C;YACD,OAAO,KAAK,CAAA;SACb;;;;;QAEO,+BAAS;;;;QAAjB;;gBACQ,SAAS,GAAG,IAAI,CAAC,IAAI,EAAE;;gBACvB,OAAO,GAAG,SAAS,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;YAElD,IAAI,OAAO,EAAE;gBACX,OAAO,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;aAC3B;;;gBAIK,CAAC,GAAG,IAAI,CAAC,WAAW;;gBACpB,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC;;;;;;YAIxB,KAAK,CAAC,OAAO,CAAC,SAAS,GAAG,CAAC,CAAA;;gBACrB,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;;;;YAI/B,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;;oBACf,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;gBACf,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,EAAE,CAAC,MAAM,CAAA;gBAC1B,OAAO,EAAE,CAAA;aACV;YAED,IAAI,SAAS,EAAE;gBACb,OAAO,IAAI,CAAC,KAAK,CAAC,uBAAuB,GAAG,SAAS,GAAG,IAAI,CAAC,CAAA;aAC9D;YACD,OAAO,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAA;SACtC;;;;;QAEO,0BAAI;;;;QAAZ;;gBACM,SAAiB;;gBACjB,GAAG,GAAG,IAAI,CAAC,KAAK;YACpB,GAAG;gBACD,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE;oBAC1C,OAAO,SAAS,CAAA;iBACjB;gBACD,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAA;aAC3C,QAAQ,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,EAAC;YACjD,IAAI,CAAC,KAAK,GAAG,GAAG,CAAA;YAChB,OAAO,SAAS,CAAA;SACjB;;;;;;QAEO,2BAAK;;;;;QAAb,UAAc,OAAe;YAC3B,OAAO,CAAC,KAAK,CAAC,sBAAsB,EAAE,OAAO,CAAC,CAAA;YAC9C,IAAI,CAAC,OAAO,GAAG,OAAO,CAAA;YACtB,OAAO,SAAS,CAAA;SACjB;;;;;;QAEO,gCAAU;;;;;QAAlB,UAAmB,MAAmB;;;gBAE9B,EAAE,GAAU,EAAE;;gBAChB,CAAC;YACL,OAAO,CAAC,CAAC,GAAG,MAAM,CAAC,IAAI,EAAE,MAAM,GAAG,EAAE;gBAClC,IAAI,CAAC,CAAC,EAAE;oBACN,OAAO,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAA;iBACxC;gBACD,IAAI,EAAE,CAAC,MAAM,EAAE;oBACb,IAAI,CAAC,KAAK,GAAG,EAAE;wBACb,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,CAAA;qBAC9B;iBACF;qBAAM,IAAI,CAAC,KAAK,GAAG,EAAE;oBACpB,OAAO,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC,CAAA;iBACnC;qBAAM;oBACL,EAAE,MAAM,CAAC,KAAK,CAAA;iBACf;;oBACK,CAAC,GAAG,MAAM,CAAC,SAAS,EAAE;gBAC5B,IAAI,OAAO,CAAC,KAAK,WAAW,EAAE;oBAC5B,OAAO,SAAS,CAAA;iBACjB;gBACD,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;aACX;YACD,OAAO,EAAE,CAAA;SACV;QACH,kBAAC;IAAD,CAAC;;;;;;;QClOD;YAAA,iBA0EC;;YAxES,OAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,CAAA;YAE9B,cAAS,GAAG;gBAClB,KAAK;;;;gBAAE,UAAC,GAAU;;wBACV,WAAW,GAAG,GAAG,CAAC,GAAG;;;;oBAAC,UAAA,QAAQ;;4BAC5B,EAAE,GAAG,KAAI,CAAC,SAAS,CAAC,OAAO,QAAQ,CAAC;wBAC1C,IAAI,EAAE,EAAE;4BACN,OAAO,EAAE,CAAC,QAAQ,CAAC,CAAA;yBACpB;qBACF,EAAC;oBACF,OAAO,OAAK,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,MAAG,CAAA;iBACrC,CAAA;gBACD,OAAO;;;;gBAAE,UAAC,IAAa,IAAK,QAAC,IAAI,GAAG,IAAI,GAAG,IAAI,IAAC,CAAA;gBAChD,IAAI;;;;gBAAE,UAAC,CAAO,IAAK,OAAA,IAAI,GAAA,CAAA;gBACvB,MAAM;;;;gBAAE,UAAC,GAAW;oBAClB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;wBAClB,OAAO,IAAI,CAAA;qBACZ;;oBAED,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAA;iBACrC,CAAA;gBACD,MAAM;;;;gBAAE,UAAC,GAAQ;oBACf,IAAI,GAAG,EAAE;wBACP,IAAI,GAAG,YAAY,KAAK,EAAE;4BACxB,OAAO,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;yBACjC;wBAED,IAAI,OAAO,GAAG,CAAC,aAAa,KAAK,QAAQ,IAAI,OAAO,GAAG,CAAC,aAAa,CAAC,YAAY,KAAK,WAAW,EAAE;4BAClG,OAAO,GAAG,CAAC,YAAY,EAAE,CAAA;yBAC1B;;4BAEK,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;wBAC7B,IAAI,CAAC,IAAI,EAAE,CAAA;;4BACL,WAAW,GAAG,IAAI,CAAC,GAAG;;;;wBAAC,UAAA,GAAG;;gCACxB,QAAQ,GAAG,GAAG,CAAC,GAAG,CAAC;;gCACnB,EAAE,GAAG,KAAI,CAAC,SAAS,CAAC,OAAO,QAAQ,CAAC;4BAC1C,OAAU,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,SAAI,EAAE,CAAC,QAAQ,CAAG,CAAA;yBACvD,EAAC;wBACF,OAAO,MAAI,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,MAAG,CAAA;qBACpC;oBACD,OAAO,IAAI,CAAA;iBACZ,CAAA;gBACD,MAAM;;;;gBAAE,UAAC,GAAW;oBAClB,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,OAAO,IAAI,CAAA;qBACZ;oBAED,IAAI,CAAC,KAAK,wCAAE,GAAG,MAAuB,IAAI,KAAK,CAAC,wBAAwB,CAAC,GAAG,CAAC,EAAE;wBAC7E,OAAO,GAAG,CAAA;qBACX;oBAED,IAAI,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;wBACzB,OAAO,GAAG,CAAA;qBACX;;wBAEK,eAAe,GAAG,GAAG,CAAC,OAAO,CAAC,SAAS;;;;;oBAAE,UAAC,CAAC,EAAE,CAAC;wBAClD,IAAI,KAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;4BACd,OAAO,GAAG,GAAG,CAAC,CAAA;yBACf;wBACD,OAAO,CAAC,CAAA;qBACT,EAAC;oBAEF,OAAO,MAAI,eAAe,MAAG,CAAA;iBAC9B,CAAA;gBACD,SAAS;;;;gBAAE,UAAA,CAAC;oBACV,MAAM,IAAI,KAAK,CAAC,yCAAyC,CAAC,CAAA;iBAC3D,CAAA;aACF,CAAA;SAKF;;;;;QAHQ,oCAAS;;;;QAAhB,UAAiB,GAAQ;YACvB,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,CAAC,CAAC,GAAG,CAAC,CAAA;SACvC;QACH,uBAAC;IAAD,CAAC;;;;;;;QCxED;SAmBC;;;;;;;;;QAdQ,gCAAS;;;;;QAAhB,UAAiB,GAAQ;YACvB,OAAO,IAAI,gBAAgB,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,CAAA;SAC7C;;;;;;;;;QAKM,4BAAK;;;;;QAAZ,UAAa,GAAW;;gBAChB,OAAO;;;;YAAG,UAAC,CAAQ;gBACvB,MAAM,KAAK,CAAC,uBAAuB,GAAG,CAAC,CAAC,CAAA;aACzC,CAAA;;gBACK,MAAM,GAAG,IAAI,WAAW,CAAC,OAAO,CAAC;YACvC,OAAO,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;SACzB;;oBAlBFA,eAAU;;QAmBX,mBAAC;KAnBD;;;;;;;QCDA;SAG6B;;oBAH5BC,aAAQ,SAAC;wBACR,SAAS,EAAE,CAAC,YAAY,CAAC;qBAC1B;;QAC2B,oBAAC;KAH7B;;;;;;;;;;;;;;;;"}